import numpy as np

def create_board():
    return np.zeros((6, 7))

def drop_piece(board, row, col, piece):
    board[row][col] = piece

def is_valid_location(board, col):
    return board[5][col] == 0

def get_next_open_row(board, col):
    for r in range(6):
        if board[r][col] == 0:
            return r

def winning_move(board, piece):
    # Check horizontal locations for win
    for c in range(4):
        for r in range(6):
            if board[r][c] == piece and board[r][c+1] == piece and board[r][c+2] == piece and board[r][c+3] == piece:
                return True

    # Check vertical locations for win
    for c in range(7):
        for r in range(3):
            if board[r][c] == piece and board[r+1][c] == piece and board[r+2][c] == piece and board[r+3][c] == piece:
                return True

    # Check positively sloped diagonals
    for c in range(4):
        for r in range(3):
            if board[r][c] == piece and board[r+1][c+1] == piece and board[r+2][c+2] == piece and board[r+3][c+3] == piece:
                return True

    # Check negatively sloped diagonals
    for c in range(4):
        for r in range(3, 6):
            if board[r][c] == piece and board[r-1][c+1] == piece and board[r-2][c+2] == piece and board[r-3][c+3] == piece:
                return True

    return False

def print_board(board):
    print(np.flip(board, 0))

def connect_four():
    board = create_board()
    game_over = False
    turn = 0

    while not game_over:
        if turn % 2 == 0:
            piece = 1
        else:
            piece = 2

        col = int(input("Player {} enter your column (0-6): ".format(piece)))

        if is_valid_location(board, col):
            row = get_next_open_row(board, col)
            drop_piece(board, row, col, piece)

            if winning_move(board, piece):
                print("Player {} wins!".format(piece))
                game_over = True

        else:
            print("Invalid move. Try again.")
            continue

        print_board(board)
        turn += 1

        if turn > 41:
            print("It's a draw!")
            game_over = True

if __name__ == "__main__":
    print("Connect Four")
    connect_four()
